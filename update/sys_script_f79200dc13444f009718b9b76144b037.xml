<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_snc_slack_points_slack_event</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Process Points</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	var payloadObject = JSON.parse(current.payload); 
	
	// DO NOT process bot messages
	if (payloadObject.event.subtype == 'bot_message') {
		return; 
	}
	
	var matches = payloadObject.event.text.match(/\s?\@?(\S+)\s?\+\+/g); 
	
	matches.forEach(function (t) {
		var thing = t.replace('++', ''); 
		thing = thing.trim();
		
		// Check for self-points
		if (thing.contains(payloadObject.event.user)) {
			return; 
		}
		
		var grSlackUser = new GlideRecord('x_snc_slack_points_slack_user'); 
		grSlackUser.addQuery('user_id', thing); 
		grSlackUser.query(); 

		if (grSlackUser.next()) {
			grSlackUser.points = grSlackUser.points + 1;  
			grSlackUser.update(); 
		} else {
			grSlackUser.initialize(); 
			grSlackUser.user_id = thing; 
			grSlackUser.points = 1; 
			grSlackUser.insert(); 
		}

		var rm = new sn_ws.RESTMessageV2();
		rm.setLogLevel('all');
		rm.setHttpMethod('POST');
		rm.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded'); 
		rm.setEndpoint('https://slack.com/api/chat.postMessage');

		var bodyString = '';
		bodyString += 'token=' + gs.urlEncode(gs.getProperty('x_snc_slack_points.slack_bot_token')); 
		bodyString += '&channel=' + gs.urlEncode(payloadObject.event.channel);
		
		if (payloadObject.event.thread_ts) {
			bodyString += '&thread_ts=' + gs.urlEncode(payloadObject.event.thread_ts); 
		}
		
		bodyString += '&text=' + gs.urlEncode('Congrats ' + thing + ' you now have ' + grSlackUser.points + ' points'); 

		rm.setRequestBody(bodyString);
		var response = rm.execute();
		var responseBody = response.getBody();
		var statusCode = response.getStatusCode();
	}); 
	
	// var userId = payloadObject.event.text.match(/\s?\@?(\S+)\s?\+\+/)[1]; 

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>josh.nerius</sys_created_by>
        <sys_created_on>2017-07-14 21:14:05</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>f79200dc13444f009718b9b76144b037</sys_id>
        <sys_mod_count>30</sys_mod_count>
        <sys_name>Process Points</sys_name>
        <sys_overrides/>
        <sys_package display_value="Slack Points Thing" source="x_snc_slack_points">4f6df3c813444f009718b9b76144b02c</sys_package>
        <sys_policy/>
        <sys_scope display_value="Slack Points Thing">4f6df3c813444f009718b9b76144b02c</sys_scope>
        <sys_update_name>sys_script_f79200dc13444f009718b9b76144b037</sys_update_name>
        <sys_updated_by>josh.nerius</sys_updated_by>
        <sys_updated_on>2017-08-23 16:02:43</sys_updated_on>
        <template/>
        <when>async</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=f79200dc13444f009718b9b76144b037"/>
</record_update>
